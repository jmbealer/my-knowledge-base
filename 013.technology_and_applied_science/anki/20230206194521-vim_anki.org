:PROPERTIES:
:ID:       02c3dfdd-dd5e-4347-9d7b-373efb1a5017
:mtime:    20230625164226 20230307142532 20230307130449 20230213003735 20230208093535 20230206230426 20230206220102 20230206194529
:ctime:    20230206194521
:END:
#+title: vim-anki

nvim-surround
ys (you surround/add)
  ys<motion><delimiter>
    ysw" does "test"
    ysa"( does ( "test" )
    yswf does func(test)
cs (change surround)
  cs<old delimiter><new delimiter>
  cst replace html tag
  csf
ds (delete surround)
  ds<delimiter>
  dsf

"test"

* Added
:PROPERTIES:
:TABLE_EXPORT_FILE: vim-anki.csv
:TABLE_EXPORT_FORMAT: orgtbl-to-csv
:END:
|--------------------+--------------------------+----------------------------------------------------------------------------------------------------------------+----+------------------------|
| #separator:comma   |                          |                                                                                                                |    |                        |
| #html:true         |                          |                                                                                                                |    |                        |
| #notetype column:1 |                          |                                                                                                                |    |                        |
| #deck column:2     |                          |                                                                                                                |    |                        |
| #tags column:5     |                          |                                                                                                                |    |                        |
|--------------------+--------------------------+----------------------------------------------------------------------------------------------------------------+----+------------------------|
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::s}} - <i>move</i> cursor <b>{{c2::left}}</b>.                                                    | h  | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::b}} - <i>move</i> cursor <b>{{c2::right}}</b>.                                                   | l  | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::0}} - <i>move</i> to the <b>{{c2::first}}</b> character in the line.                                     |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::^}} - <i>move</i> to the <b>{{c2::first}} non-blank</b> character in the line.                           |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::$}} - <i>move</i> to the <b>{{c2::next EOL}}</b> (end of line) position.                         |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::g_}} - <i>go to</i> the <b>{{c2::last}} non-blank</b> character in the line.                             |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::g0}} - <i>go to</i> <b>{{c2::first}}</b> character in screen line.                                       |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::g^}} - <i>go to</i> <b>{{c2::first}} non-blank</b> character in screen line.                             |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::g$}} - <i>go to</i> <b>{{c2::last}}</b> character in screen line.                                |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::gm}} - <i>go to</i> <b>{{c2::middle}}</b> of the screen line.                                            |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | {{c1::gM}} - <i>go to</i> <b>{{c2::middle}}</b> of the line.                                                   |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::fx}} - <i>jump</i> to Nth occurrence of x to the <b>{{c2::right}}</b>.                           |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::Fx}} - <i>jump</i> to Nth occurrence of x to the <b>{{c2::left}}</b>.                            |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::jx}} - <i>jump till</i> before the Nth occurrence of x to the <b>{{c2::right}}</b>.              | tx | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::Jx}} - <i>jump till</i> before the Nth occurrence of x to the <b>{{c2::left}}</b>.               | Tx | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::;}} - <b>{{c2::repeat}}</b> the last "f", "F", "j", or "J" N times.                              |    | vim left-right motions |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::,}} - <b>{{c2::repeat}}</b> the last "f", "F", "j", or "J" N times in <i>opposite direction</i>. |    | vim left-right motions |
|--------------------+--------------------------+----------------------------------------------------------------------------------------------------------------+----+------------------------|
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::n}} - move {{c2::up}}</b> N lines.                                                               | k  | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::t}} - move {{c2::down}}</b> N lines.                                                             | j  | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::-}} - move <b>{{c2::up}}</b> N lines, on the first non-blank character.                          |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::+}} - move <b>{{c2::down}}</b> N lines, on the first non-blank character.                        |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::_}} - move <b>{{c2::down}}</b> N-1 lines, on the first non-blank character.                      |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::G}} - go to line N: default: <b>{{c2::last}}</b> line, on the first non-blank character.         |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::gg}} - go to line N; default: <b>{{c2::first}}</b> line, on the first non-blank character.       |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::%}} - move to line N <b>{{c2::percentage down}}</b> in the file. N must be given.                |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::gk}} - go <b>{{c2::up}}</b> N <i>screen lines</i>.                                               |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::gj}} - go <b>{{c2::down}}</b> N <i>screen lines</i>.                                             |    | vim up-down motions    |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::a}} - <b>{{c2::append}}</b> text <i>after the cursor</i>. (N times)                              |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::A}} - <b>{{c2::append}}</b> text at the <i>end of the line</i>. (N times)                        |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::i}} - <b>{{c2::insert}}</b> text <i>before the cursor</i>.                                       |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::I}} - <b>{{c2::insert}}</b> text at the <i>first non-blank in the line</i>. (N times)            |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::gI}} - <b>{{c2::go insert}}</b> text in <i>column 1</i>. (N times)                               |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::o}} - <b>{{c2::open}}</b> a new line <i>below the current line</i>, append text. (N times)       |    | vim insert text        |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::O}} - <b>{{c2::open}}</b> a new line <i>above the current line</i>, append text. (N times)       |    | vim insert text        |
|--------------------+--------------------------+----------------------------------------------------------------------------------------------------------------+----+------------------------|

| bash type | 0-current-using::vim-wip | {{c1::w                                          | move N words forward                                                                                            |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::W                                          | move N WORDS forward                                                                                            |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::e                                          | move forward to the end of the Nth word                                                                         |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::E                                          | move forward to the end of the Nth WORD                                                                         |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::ge                                         | go backward to the end of the Nth word                                                                          |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::gE                                         | go backward to the end of the Nth WORD                                                                          |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::)                                          | move N sentences forward                                                                                        |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::(                                          | move N sentences backward                                                                                       |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::}                                          | move N paragraphs forward                                                                                       |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::{                                          | move N paragraphs backward                                                                                      |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]]                                         | move N sections forward, at start of section                                                                    |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[[                                         | move N sections backward, at start of section                                                                   |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::][                                         | move N sections forward, at end of section                                                                      |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[]                                         | move N sections backward, at end of section                                                                     |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[(                                         | move times back to unclosed '('                                                                                 |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[{                                         | move times back to unclosed '{'                                                                                 |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[m                                         | move times back to start of method (for Java)                                                                   |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[M                                         | move times back to end of method (for Java)                                                                     |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::])                                         | move times forward to unclosed ')'                                                                              |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]}                                         | move times forward to unclosed '}'                                                                              |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]m                                         | move times forward to start of method (for Java)                                                                |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]M                                         | move times forward to end of method (for Java)                                                                  |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[#                                         | move times back to unclosed "#if" or "#else"                                                                    |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]#                                         | move times forward to unclosed "#else" or "#endif"                                                              |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::[*                                         | move times back to start of comment "/*"                                                                        |                        | vim text-object motions |
| bash type | 0-current-using::vim-wip | {{c1::]*                                         | move times forward to end of comment "*/"                                                                       |                        | vim text-object motions |
|-----------+--------------------------+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------+------------------------+-------------------------|
| bash type | 0-current-using::vim-wip | {{c1::aw                                         | select "a word"                                                                                                 |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::iw                                         | select "inner word"                                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::aW                                         | select "a WORD"                                                                                                 |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::iW                                         | select "inner WORD"                                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::as                                         | select "a sentence"                                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::is                                         | select "inner sentence"                                                                                         |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::ap                                         | select "a paragraph"                                                                                            |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::ip                                         | select "inner paragraph"                                                                                        |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::ab                                         | select "a block" (from "[(" to ")]")                                                                            |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::ib                                         | select "inner block" (from "[(" to ")]")                                                                        |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::aB                                         | select "a BLOCK" (from "[(" to ")]")                                                                            |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::iB                                         | select "inner BLOCK" (from "[(" to ")]")                                                                        |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::a>                                         | select "a <> block"                                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::i>                                         | select "inner <> block"                                                                                         |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::at                                         | select "a tag block" (from <aaa> to </aaa>)                                                                     |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::it                                         | select "inner tag block" (from <aaa> to </aaa>)                                                                 |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::a'                                         | select "a single quoted string"                                                                                 |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::i'                                         | select "inner single quoted string"                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::a"                                         | select "a double quoted string"                                                                                 |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::i"                                         | select "inner double quoted string"                                                                             |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::a`                                         | select "a backward quoted string"                                                                               |                        | vim text-objects        |
| bash type | 0-current-using::vim-wip | {{c1::i`                                         | select "inner backward quoted string"                                                                           |                        | vim text-objects        |
|-----------+--------------------------+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------+------------------------+-------------------------|
| bash type | 0-current-using::vim-wip | {{c1:::help keyword                              | open help for keyword                                                                                           |                        | vim global              |
| bash type | 0-current-using::vim-wip | {{c1:::o file                                    | open file                                                                                                       |                        | vim global              |
| bash type | 0-current-using::vim-wip | {{c1:::saveas file                               | save file as                                                                                                    |                        | vim global              |
| bash type | 0-current-using::vim-wip | {{c1:::close                                     | close current pane                                                                                              |                        | vim global              |
|-----------+--------------------------+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------+------------------------+-------------------------|
| bash type | 0-current-using::vim-wip | {{c1::H                                          | move to top of screen                                                                                           |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::M                                          | move to middle of screen                                                                                        |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::L                                          | move to bottom of screen                                                                                        |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::5G                                         | go to line 5                                                                                                    |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::zz                                         | center cursor on screen                                                                                         |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::c-b                                        | move back one full screen                                                                                       |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::c-f                                        | move forward one full screen                                                                                    |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::c-d                                        | move forward 1/2 a screen                                                                                       |                        | vim motions             |
| bash type | 0-current-using::vim-wip | {{c1::c-u                                        | move back 1/2 a screen                                                                                          |                        | vim motions             |
|-----------+--------------------------+--------------------------------------------------+-----------------------------------------------------------------------------------------------------------------+------------------------+-------------------------|
| bash type | 0-current-using::vim-wip | {{c1::Esc                                        | exit insert mode                                                                                                |                        | vim insert              |
| bash type | 0-current-using::vim-wip | {{c1::r                                          | replace a single character                                                                                      |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::J                                          | join line below to the current one                                                                              |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::cc                                         | change (replace) entire line                                                                                    |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::cw                                         | change (replace) to the start of the next word                                                                  |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::ce                                         | change (replace) to the end of the next word                                                                    |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::cb                                         | change (replace) to the start of the previous word                                                              |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::c0                                         | change (replace) to the start of the line                                                                       |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::c$                                         | change (replace) to the end of the line                                                                         |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::xp                                         | transpose two letters (delete and paste)                                                                        |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::.                                          | repeat last command                                                                                             |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::u                                          | undo                                                                                                            |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::c-r                                        | redo                                                                                                            |                        | vim editing             |
| bash type | 0-current-using::vim-wip | {{c1::v                                          | start visual mode, mark lines, then do a command (like y-yank)                                                  |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::V                                          | start linewise visual mode                                                                                      |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::o                                          | move to other end of marked area                                                                                |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::O                                          | move to other corner of block                                                                                   |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::aw                                         | mark a word                                                                                                     |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::ab                                         | a block with ()                                                                                                 |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::aB                                         | a block with {}                                                                                                 |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::ib                                         | inner block with ()                                                                                             |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::iB                                         | inner block with {}                                                                                             |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::Esc                                        | exit visual mode                                                                                                |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::c-v                                        | start visual block mode                                                                                         |                        | vim visual marking      |
| bash type | 0-current-using::vim-wip | {{c1::>                                          | shift text right                                                                                                |                        | vim visual              |
| bash type | 0-current-using::vim-wip | {{c1::<                                          | shift text left                                                                                                 |                        | vim visual              |
| bash type | 0-current-using::vim-wip | {{c1::y                                          | yank (copy) marked text                                                                                         |                        | vim visual              |
| bash type | 0-current-using::vim-wip | {{c1::d                                          | delete marked text                                                                                              |                        | vim visual              |
| bash type | 0-current-using::vim-wip | {{c1::~                                          | switch case                                                                                                     |                        | vim visual              |
| bash type | 0-current-using::vim-wip | {{c1::yy                                         | yank (copy) a line                                                                                              |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::2yy                                        | yank (copy) 2 lines                                                                                             |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::yw                                         | yank (copy) the characters of the word from the cursor position to the start of the next word                   |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::y$                                         | yank (copy) to end of line                                                                                      |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::p                                          | put (paste) the clipboard after cursor                                                                          |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::P                                          | put (paste) before cursor                                                                                       |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::dd                                         | delete (cut) a line                                                                                             |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::2dd                                        | delete (cut) 2 lines                                                                                            |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::dw                                         | delete (cut) the characters of the word from the cursor position to the start of the next word                  |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::D                                          | delete (cut) to the end of the line                                                                             |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::d$                                         | delete (cut) to the end of the line                                                                             |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::d^                                         | delete (cut) to the first non-blank character of the line                                                       |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::d0                                         | delete (cut) to the begining of the line                                                                        |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::x                                          | delete (cut) character                                                                                          |                        | vim paste cut           |
| bash type | 0-current-using::vim-wip | {{c1::/pattern                                   | search for pattern                                                                                              |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1::?pattern                                   | search backward for pattern                                                                                     |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1::\vpattern                                  | 'very magic' pattern: non-alphanumeric characters are interpreted as special regex symbols (no escaping needed) |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1::k                                          | repeat search in same direction                                                                                 | n                      | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1::K                                          | repeat search in opposite direction                                                                             | N                      | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1:::%s/old/new/g                              | replace all old with new throughout file                                                                        |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1:::%s/old/new/gc                             | replace all old with new throughout file with confirmations                                                     |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1:::noh                                       | remove highlighting of search matches                                                                           |                        | vim search replace      |
| bash type | 0-current-using::vim-wip | {{c1:::vimgrep /pattern/ {file}                    | search for pattern in multiple files                                                                            |                        | vim search files        |
| bash type | 0-current-using::vim-wip | {{c1:::cn                                        | jump to the next match                                                                                          |                        | vim search files        |
| bash type | 0-current-using::vim-wip | {{c1:::cp                                        | jump to the previous match                                                                                      |                        | vim search files        |
| bash type | 0-current-using::vim-wip | {{c1:::copen                                     | open a window containing the list of matches                                                                    |                        | vim search files        |
| bash type | 0-current-using::vim-wip | {{c1:::w                                         | write (save) the file, but don't exit                                                                           |                        | vim exiting             |
| bash type | 0-current-using::vim-wip | {{c1:::w !sudo tee %                             | write out the current file using sudo                                                                           |                        | vim exiting             |
| bash type | 0-current-using::vim-wip | {{c1:::wq                                        | write (save) and quit                                                                                           | :x ZZ                  | vim exiting             |
| bash type | 0-current-using::vim-wip | {{c1:::q                                         | quit (fails if there are unsaved changes)                                                                       |                        | vim exiting             |
| bash type | 0-current-using::vim-wip | {{c1:::q!                                        | quit and throw away unsaved changes                                                                             | ZQ                     | vim exiting             |
| bash type | 0-current-using::vim-wip | {{c1:::e file                                    | edit a file in a new buffer                                                                                     |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::bnext                                     | go to the next buffer                                                                                           | :bn                    | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::bprev                                     | go to the previous buffer                                                                                       | :bp                    | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::bd                                        | delete a buffer (close a file)                                                                                  |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::ls                                        | list all open buffers                                                                                           |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::sp file                                   | open a file in a new buffer and split window                                                                    |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::vsp file                                  | open a file in a new buffer and vertically split window                                                         |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-ws                                       | split window                                                                                                    |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-ww                                       | switch windows                                                                                                  |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wq                                       | quit a window                                                                                                   |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wv                                       | split window vertically                                                                                         |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wh                                       | move cursor to the left window (vertical split)                                                                 |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wl                                       | move cursor to the right window (vertical split)                                                                |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wj                                       | move cursor to the window below (horizontal split)                                                              |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1::c-wk                                       | move cursor to the window above (horizontal split)                                                              |                        | vim multiple files      |
| bash type | 0-current-using::vim-wip | {{c1:::tabnew                                    | open a file in a new tab                                                                                        | :tabnew file           | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1::c-wT                                       | move the current split window into its own tab                                                                  |                        | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1::gt                                         | move to the next tab                                                                                            | :tabnext :tabn         | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1::gT                                         | move to the previous tab                                                                                        | :tabprev :tabp         | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1::<number>gt                                 | move to tab <number>                                                                                            |                        | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1:::tabmove <number>                          | move current tab to the <number>th position (indexed from 0)                                                    |                        | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1:::tabclose                                  | close the current tab and all its windows                                                                       | :tabc                  | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1:::tabonly                                   | close all tabs except for the current one                                                                       | :tabo                  | vim tabs                |
| bash type | 0-current-using::vim-wip | {{c1:::tabdo command                             | run the command on all tabs (e.g. :tabdo q - closes all opened tabs)                                            |                        | vim tabs                |


* Not Added
 b n words backward
 B n WORDs backward
| bash type | 0-current-using::vim-wip | {{c1::b | jump backwards to the start of a word                                 |   |     |             |
| bash type | 0-current-using::vim-wip | {{c1::B | jump backwards to the start of a word (words can contain punctuation) |   |     |             |
| bash type | 0-current-using::vim-wip | {{c1::s | delete character and substitute text                                  | s | vim editing |
| bash type | 0-current-using::vim-wip | {{c1::S | delete line and substitute text (same as cc)                          | S | vim editing |
| bash type          | 0-current-using::vim-wip | <i>N</i>{{c1::\bar}} - <i>move</i> to <b>{{c2::column}}</b> N (default: 1).                                    |    | vim left-right motions |

N| bash type | 0-current-using::vim-wip | {{c1::go to column N
:startinsert  :star[tinsert][!]  start Insert mode, append when [!] used
:startreplace :startr[eplace][!]  start Replace mode, at EOL when [!] used
in Visual block mode:
v_b_I  	   I	insert the same text in front of all the selected lines
v_b_A  	   A	append the same text after all the selected lines
