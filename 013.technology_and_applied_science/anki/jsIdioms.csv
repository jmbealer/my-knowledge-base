#separator:comma
#html:true
#notetype column:1
#deck column:2
#tags column:5
bash type,0-current-using::jsIdioms-wip,<b>Print Hello World</b><br>{{c1::document.write('Hello World');}} <i>This print the output to the rendered browser document.</i><br>Alternative implementation:<br>{{c2::console.log('Hello World');}} <i>This prints output to the console on any standard browser.</i>,Print a literal string on standard output,js idioms
bash type,0-current-using::jsIdioms-wip,<b>Print Hello 10 times</b><br>{{c1::for (let i = 0; i < 10; i++) {}}<br>&ensp;{{c1::console.log('Hello');}}<br>{{c1::};}}<br>Alternative implementation:<br>{{c2::let count = 0;}}<br>{{c2::while (count < 10) {}}<br>&ensp;{{c2::count++;}}<br>&ensp;{{c2::console.log('Hello');}}<br>{{c2::};}}<br>Alternative implementation:<br>{{c3::[...Array(10)].forEach(() => console.log('Hello'));}}<brAlternative implementation:<br>{{c4::console.log( 'Hello\n'.repeat(10) );}}<i>String built in function</i>,Loop to execute some code a constant number of times,js Idioms
bash type,0-current-using::jsIdioms-wip,<b>Create a procedure</b><br>{{c1::var bli = function() {}}<br>&ensp;{{c1::console.log('Hello World');}}<br>{{c1::};}}<br>Alternative implementation:<br>{{c2::function bli() {}}<br>&ensp;{{c2::console.log('Hello World');}}<br>{{c2::};}}<br>Alternative implementation:<br>{{c3::let dog = 'Poodle';}}<br>{{c3::const dogAlert = () => alert(dog);}}<br>,Like a function which doesn't return any value; thus has only side effects (e.g. Print to standard output),js Idioms
bash type,0-current-using::jsIdioms-wip,<b>Create a function</b><br>{{c1::function square(x) {}}<br>&ensp;{{c1::return x * x;}}<br>{{c1::};}}<br>Alternative implementation:<br>{{c2::const square = (x) => x * x;}}<br>Alternative implementation:<br>{{c3::const square = n => n**2;}} <i>The exponentiation operator is the most expressize way to do this.</i><br>Alternative implementation:<br>{{c4::const square = (number) => Math.pow(number&#44; 2);}},Create a function which returns the square of an integer,js Idioms
bash type,0-current-using::jsIdioms-wip,<b>Create a 2D Point data structure</b><br>{{c1::var p = { x: 1.122&#44; y: 7.45};}} <i>Types are implicit. Just initialize a variable.</i><br>Alternative implementation:<br>{{c2::const point = {x: 1&#44; y: 2}}},Declare a container type for two floating-point number x and y,js Idioms
